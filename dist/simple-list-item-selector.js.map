{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 271f3804f4108ecdfa4b","webpack:///./js/simple-list-item-selector.js"],"names":["_instances","_clickModes","CTRL_CLICK_TO_SELECT","CLICK_TO_SELECT","SimpleListItemSelector","createInstance","id","_clickMode","_allItemElements","_lastClickedIndexWithoutShift","_newSelection","_containerNode","_itemsSelector","_selectedClassName","_resetSelector","_onSelectionChanged","_debug","_init","clickMode","containerNode","childSelector","resetSelector","selectedClassName","onSelectionChanged","debug","console","warn","querySelectorAll","_resetDOM","_isValidClickMode","clickModes","_registerEvents","Error","resetElem","document","querySelector","addEventListener","_clearAllSelectionsHandler","e","_preventDefaultHandler","forEach","elem","index","setAttribute","toString","_clickElementHandler","_unregisterEvents","removeEventListener","i","_updateDOM","selection","selectedItems","sortedSelection","concat","sort","item","_indexOfItem","includes","push","_isItemSelected","classList","add","removeAttribute","remove","_updateSelection","updateDOM","selectedItemIndex","shiftKey","ctrlKey","splice","indexOf","firstSelectedItem","firstSelectedItemIndex","log","_unselectItemsWithinRange","start","end","length","mode","_selectItemsWithinRange","_unselectItemAtIndex","hasAttribute","preventDefault","call","parseInt","getAttribute","value","isValid","_selectItem","_unselectItem","_reset","itemsSelector","instance","init","selectItem","unselectItem","reset","unregisterEvents","getInstance","find","removeInstance","indexToRemove","module","exports"],"mappings":"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","file":"simple-list-item-selector.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleListItemSelector\"] = factory();\n\telse\n\t\troot[\"SimpleListItemSelector\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 271f3804f4108ecdfa4b","(function () {\n    let _instances = [];\n\n    let _clickModes = {\n        CTRL_CLICK_TO_SELECT: 0,\n        CLICK_TO_SELECT: 1\n    };\n\n    let SimpleListItemSelector = {\n        createInstance(id) {\n            let _clickMode;\n            let _allItemElements = [];\n            let _lastClickedIndexWithoutShift;\n            let _newSelection = [];\n            let _containerNode;\n            let _itemsSelector;\n            let _selectedClassName;\n            let _resetSelector;\n            let _onSelectionChanged = () => {};\n            let _debug = false;\n\n            function _init({\n                clickMode,\n                containerNode,\n                childSelector,\n                resetSelector,\n                selectedClassName,\n                onSelectionChanged,\n                debug}) {\n\n                if (containerNode) {\n                    _containerNode = containerNode;\n\n                    if (childSelector) {\n                        _itemsSelector = childSelector;\n                    } else {\n                        _itemsSelector = 'li';\n                        console.warn('No childSelector was specified. Defaulted to \"li\"');\n                    }\n\n                    _allItemElements = containerNode.querySelectorAll(_itemsSelector);\n\n                    if (_allItemElements) {\n                        _resetDOM();\n\n                        if (_isValidClickMode(clickMode)) {\n                            _clickMode = clickMode;\n                        } else {\n                            _clickMode = SimpleListItemSelector.clickModes.CTRL_CLICK_TO_SELECT;\n                            console.warn('Invalid clickMode was specified. Defaulted to \"CTRL_CLICK_TO_SELECT\"');\n                        }\n\n                        if (onSelectionChanged && typeof onSelectionChanged === 'function') {\n                            _onSelectionChanged = onSelectionChanged;\n                        }\n\n                        _selectedClassName = selectedClassName;\n                        _resetSelector = resetSelector;\n                        _debug = debug;\n\n                        _registerEvents();\n\n                    } else {\n                        throw Error('Items were not found using ' + _itemsSelector + ' selector.');\n                    }\n                } else {\n                    throw Error('You need to specify a valid containerNode');\n                }\n            }\n\n            function _registerEvents() {\n                if (_resetSelector) {\n                    let resetElem = document.querySelector(_resetSelector);\n                    resetElem.addEventListener('click', _clearAllSelectionsHandler);\n                }\n\n                _containerNode.addEventListener('selectstart', (e) => _preventDefaultHandler);\n\n                [..._allItemElements].forEach((elem, index) => {\n                    elem.setAttribute('data-slis-index', index.toString());\n                    elem.addEventListener('click', _clickElementHandler);\n                });\n            }\n\n            function _unregisterEvents() {\n                if (_resetSelector) {\n                    let resetElem = document.querySelector(_resetSelector);\n                    resetElem.removeEventListener('click', _clearAllSelectionsHandler);\n                }\n\n                _containerNode.removeEventListener('selectstart', _preventDefaultHandler);\n\n                let i = 0;\n                [..._allItemElements].forEach((elem, index) => {\n                    elem.removeEventListener('click', _clickElementHandler);\n                });\n            }\n\n            function _updateDOM(selection) {\n                let selectedItems = [];\n                let sortedSelection = selection.concat().sort();\n\n                for (let item of _allItemElements) {\n                    let index = _indexOfItem(item);\n                    if (sortedSelection.includes(index)) {\n                        selectedItems.push(item);\n                        if (!_isItemSelected(item)) {\n                            item.setAttribute('data-slis-selected', '1');\n                            if (_selectedClassName) {\n                                item.classList.add(_selectedClassName);\n                            }\n                        }\n                    } else {\n                        if (_isItemSelected(item)) {\n                            item.removeAttribute('data-slis-selected');\n                            if (_selectedClassName) {\n                                item.classList.remove(_selectedClassName);\n                            }\n                        }\n                    }\n                }\n\n                _onSelectionChanged(selectedItems);\n            }\n\n            function _updateSelection(e, updateDOM) {\n                let item = this;\n                let selectedItemIndex = _indexOfItem(item);\n\n                if (!e.shiftKey) {\n                    _lastClickedIndexWithoutShift = selectedItemIndex;\n\n                    if (_isItemSelected(item)) {\n                        if (_clickMode === _clickModes.CTRL_CLICK_TO_SELECT && !e.ctrlKey) {\n                            // if user clicks without CTRL key, clear everything and select the one they clicked on\n                            _newSelection = [];\n                            _newSelection.push(selectedItemIndex);\n                        } else {\n                            // CTRL clicking or clicking in CLICK_TO_SELECT mode will unselect the item\n                            _newSelection.splice(_newSelection.indexOf(selectedItemIndex), 1);\n                        }\n                    } else {\n                        if (_clickMode === _clickModes.CTRL_CLICK_TO_SELECT && !e.ctrlKey) {\n                            // clear all selected items first if not using CTRL key\n                            _newSelection = [];\n                        }\n\n                        _newSelection.push(selectedItemIndex);\n                    }\n                } else {\n                    let firstSelectedItem = document.querySelector(_itemsSelector + '[data-slis-selected=\"1\"]');\n                    let firstSelectedItemIndex = _indexOfItem(firstSelectedItem);\n\n                    if (_debug) {\n                        console.log(\"first selected item: \", firstSelectedItemIndex, \" current selected item: \", selectedItemIndex, \" last selected item without shift: \", _lastClickedIndexWithoutShift);\n                    }\n\n                    if (firstSelectedItemIndex === selectedItemIndex) {\n                        // multiple items are selected currently and user wants to reduce range to just the selected item\n                        _unselectItemsWithinRange({start: selectedItemIndex + 1, end: _allItemElements.length, mode: 'forward'});\n                    } else if (firstSelectedItemIndex < selectedItemIndex) {\n                        if (selectedItemIndex > _lastClickedIndexWithoutShift) {\n                            // user wants to add the next items up until selected item to complete a forward range\n                            _selectItemsWithinRange({start: _lastClickedIndexWithoutShift + 1, end: selectedItemIndex});\n                            // the user may be reducing the range as a result, so clear selection after the current selected item\n                            _unselectItemsWithinRange({start: selectedItemIndex + 1, end: _allItemElements.length, mode: 'forward'});\n                            // if a previous selection is before the last clicked index without a shift, we need to clear it\n                            _unselectItemsWithinRange({start: _lastClickedIndexWithoutShift - 1, end: 0, mode: 'reverse'});\n                        } else {\n\n                            // user is selecting from the selected item to the last clicked item without shift\n                            _selectItemsWithinRange({start: selectedItemIndex, end: _lastClickedIndexWithoutShift - 1});\n                            // the user is reducing the selection above the last clicked index without shift, so we need to clear selection before the current selected item\n                            _unselectItemsWithinRange({start: selectedItemIndex - 1, end: 0, mode: 'reverse'});\n                            // clear items after the last clicked index without shift\n                            _unselectItemsWithinRange({\n                                start: _lastClickedIndexWithoutShift + 1,\n                                end: _allItemElements.length,\n                                mode: 'forward'\n                            });\n                        }\n                    } else {\n                        // user is selecting range upwards, so select between the last clicked index without shift and the selected item\n                        _selectItemsWithinRange({start: selectedItemIndex, end: _lastClickedIndexWithoutShift});\n                        // clear items after the last clicked index without shift\n                        _unselectItemsWithinRange({\n                            start: _lastClickedIndexWithoutShift + 1,\n                            end: _allItemElements.length,\n                            mode: 'forward'\n                        });\n                    }\n                }\n\n                updateDOM(_newSelection);\n            }\n\n            function _selectItemsWithinRange({start, end}) {\n                if (start < 0 || end < start) return;\n\n                for (let i = start; i <= end; i++) {\n                    let item = _allItemElements[i];\n                    if (item && !_isItemSelected(item)) {\n                        let index = _indexOfItem(item);\n                        _newSelection.push(index);\n                    }\n                }\n            }\n\n            function _unselectItemAtIndex(index) {\n                let item = _allItemElements[index];\n                if (item && _isItemSelected(item)) {\n                    _newSelection.splice(_newSelection.indexOf(index), 1);\n                }\n            }\n\n            function _unselectItemsWithinRange({start, end, mode}) {\n                if (start < 0) return;\n\n                if (mode === 'reverse' && end <= start) {\n                    for (let i = start; i >= end; i--) {\n                        _unselectItemAtIndex(i);\n                    }\n                } else if (mode === 'forward' && end > start) {\n                    for (let i = start; i <= end; i++) {\n                        _unselectItemAtIndex(i);\n                    }\n                }\n            }\n\n            function _isItemSelected(item) {\n                return item.hasAttribute('data-slis-selected', '1');\n            }\n\n            function _clearAllSelectionsHandler() {\n                _newSelection = [];\n                _updateDOM(_newSelection);\n            }\n\n            function _preventDefaultHandler(e) {\n                e.preventDefault();\n                return false;\n            }\n\n            function _clickElementHandler(e) {\n                _updateSelection.call(this, e, _updateDOM);\n            }\n\n            function _indexOfItem(item) {\n                try {\n                    return parseInt(item.getAttribute('data-slis-index'));\n                }\n                catch(e) {\n                    throw Error('Index doesn\\'t exist. Something went dreadfully wrong.');\n                }\n            }\n\n            function _isValidClickMode(value) {\n                let isValid = false;\n\n                if (typeof value === 'undefined' || value === '') {\n                    return false;\n                }\n\n                for (let mode in _clickModes) {\n                    if (value === _clickModes[mode]) {\n                        isValid = true;\n                    }\n                }\n\n                return isValid;\n            }\n\n            function _selectItem(item) {\n                if (item && !_isItemSelected(item)) {\n                    let index = _indexOfItem(item);\n                    _newSelection.push(index);\n                }\n            }\n\n            function _unselectItem(item) {\n                if (item) {\n                    let index = _indexOfItem(item);\n                    _unselectItemAtIndex(index);\n                }\n            }\n\n            function _resetDOM() {\n                for (let item of _allItemElements) {\n                    item.removeAttribute('data-slis-index');\n                    item.removeAttribute('data-slis-selected');\n\n                    if (_selectedClassName) {\n                        item.classList.remove(_selectedClassName);\n                    }\n\n                }\n            }\n\n            function _reset() {\n                _init({\n                        clickMode: _clickMode,\n                        containerNode: _containerNode,\n                        itemsSelector: _itemsSelector,\n                        resetSelector: _resetSelector,\n                        selectedClassName: _selectedClassName,\n                        onSelectionChanged: _onSelectionChanged,\n                        debug: _debug\n                    }\n                );\n            }\n\n            let instance = {\n                id,\n                init: _init,\n                selectItem: _selectItem,\n                unselectItem: _unselectItem,\n                reset: _reset,\n                unregisterEvents: _unregisterEvents\n            };\n\n            _instances.push(instance);\n\n            return instance;\n        },\n        getInstance(id) {\n            return _instances.find((instance) => instance.id === id);\n        },\n        removeInstance(id) {\n            let instance = SimpleListItemSelector.getInstance(id);\n\n            if (instance) {\n                instance.unregisterEvents();\n                let indexToRemove = _instances.indexOf(instance);\n                _instances.splice(indexToRemove, 1);\n            } else {\n                throw Error('Instance cannot be found at Id' + id);\n            }\n\n        },\n        clickModes: _clickModes\n    };\n\n    module.exports = SimpleListItemSelector;\n\n})();\n\n\n// WEBPACK FOOTER //\n// ./js/simple-list-item-selector.js"],"sourceRoot":""}